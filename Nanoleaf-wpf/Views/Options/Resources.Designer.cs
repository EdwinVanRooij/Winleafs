//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Winleafs.Wpf.Views.Options {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Winleafs.Wpf.Views.Options.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambilight.
        /// </summary>
        public static string Ambilight {
            get {
                return ResourceManager.GetString("Ambilight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let ambilight control brightness.
        /// </summary>
        public static string AmbilightControlBrightness {
            get {
                return ResourceManager.GetString("AmbilightControlBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambilight monitor.
        /// </summary>
        public static string AmbilightMonitor {
            get {
                return ResourceManager.GetString("AmbilightMonitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambilight refresh rate per second.
        /// </summary>
        public static string AmbilightRefreshRatePerSecond {
            get {
                return ResourceManager.GetString("AmbilightRefreshRatePerSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: changing the ambilight settings requires a restart of Winleafs.
        /// </summary>
        public static string AmbilightResetMessage {
            get {
                return ResourceManager.GetString("AmbilightResetMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disclaimer.
        /// </summary>
        public static string Disclaimer {
            get {
                return ResourceManager.GetString("Disclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To retrieve your IP address.
        /// </summary>
        public static string IcanhazipExplanation {
            get {
                return ResourceManager.GetString("IcanhazipExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid value for latitude.
        /// </summary>
        public static string InvalidLatitude {
            get {
                return ResourceManager.GetString("InvalidLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid value for longitude.
        /// </summary>
        public static string InvalidLongitude {
            get {
                return ResourceManager.GetString("InvalidLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get your location based on your IP address.
        /// </summary>
        public static string IPAPIExplanation {
            get {
                return ResourceManager.GetString("IPAPIExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Changing the language requires a restart to be applied..
        /// </summary>
        public static string LanguageRestartNote {
            get {
                return ResourceManager.GetString("LanguageRestartNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude.
        /// </summary>
        public static string Latitude {
            get {
                return ResourceManager.GetString("Latitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error retrieving latitude and longitude.
        /// </summary>
        public static string LatLongReceiveError {
            get {
                return ResourceManager.GetString("LatLongReceiveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Location: {0}, {1}.
        /// </summary>
        public static string LocationDetected {
            get {
                return ResourceManager.GetString("LocationDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude.
        /// </summary>
        public static string Longitude {
            get {
                return ResourceManager.GetString("Longitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set location
        ///by IP Adress.
        /// </summary>
        public static string SetLocationByIp {
            get {
                return ResourceManager.GetString("SetLocationByIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start at Windows startup.
        /// </summary>
        public static string StartAtWindowsStartup {
            get {
                return ResourceManager.GetString("StartAtWindowsStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get sunrise and sunset times based on your location.
        /// </summary>
        public static string SunsetSunriseAPIExplanation {
            get {
                return ResourceManager.GetString("SunsetSunriseAPIExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong when updating the sunrise and sunset times.
        /// </summary>
        public static string SunsetSunriseError {
            get {
                return ResourceManager.GetString("SunsetSunriseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Winleafs uses the following APIs.
        /// </summary>
        public static string WinleafsUsesAPIs {
            get {
                return ResourceManager.GetString("WinleafsUsesAPIs", resourceCulture);
            }
        }
    }
}
